# Common - Public IP
- name: Identify Cloud
  ansible.builtin.command: cloud-init query cloud-name
  register: common_cloud
  changed_when: false

- name: Compute variables
  ansible.builtin.set_fact:
    common_cloud: "{% if common_cloud.stdout != '' %}{{ common_cloud.stdout }}{% else %}unknown-cloud{% endif %}"

- name: Get Public IPv4
  ansible.builtin.shell: |
    set -o pipefail
    case {{ common_cloud }} in
      aliyun)      token=$(curl -X PUT -s http://100.100.100.200/latest/api/token -H "X-aliyun-ecs-metadata-token-ttl-seconds: 180")
                   curl -s -H "X-aliyun-ecs-metadata-token: ${token}" http://100.100.100.200/latest/meta-data/eipv4
                   ;;
      aws)         token=$(curl -X PUT -s http://169.254.169.254/latest/api/token -H "X-aws-ec2-metadata-token-ttl-seconds: 180")
                   curl -s -H "X-aws-ec2-metadata-token: ${token}" http://169.254.169.254/latest/meta-data/public-ipv4
                   ;;
      azure)       curl -s -H "Metadata: true" --noproxy "*" "http://169.254.169.254/metadata/loadbalancer?api-version=2021-12-13" \
                     | jq -r '.loadbalancer.publicIpAddresses[].frontendIpAddress'
                   ;;
      gce)         curl -s -H "Metadata-Flavor: Google" \
                     http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip
                   ;;
      hetzner)     curl http://169.254.169.254/hetzner/v1/metadata/public-ipv4
                   ;;
      configdrive) curl http://169.254.169.254/metadata/v1/interfaces/public/0/ipv4/address
                   ;;
      akamai)      token=$(curl -X PUT -s http://169.254.169.254/v1/token -H "Metadata-Token-Expiry-Seconds: 180")
                   curl -s -H "Metadata-Token: ${token}" http://169.254.169.254/v1/network | awk '/ipv4.public/ {sub(/\/.*/,""); print $2}'
                   ;;
      *)           echo {{ ansible_default_ipv4.address | default() }}
                   ;;
    esac
  args:
    executable: bash
  register: common_public_ipv4
  changed_when: false
  when: common_cloud != 'unknown-cloud'

- name: Get Public IPv6
  ansible.builtin.command: echo '{{ ansible_default_ipv6.address | default() }}'
  register: common_public_ipv6
  changed_when: false
  when: common_cloud != 'unknown-cloud'

- name: Get Public IPv4 ipify
  community.general.ipify_facts:
  when: common_cloud == 'unknown-cloud'

- name: Compute variables
  ansible.builtin.set_fact:
    common_public_ipv4: "{% if common_cloud != 'unknown-cloud' %}{{ common_public_ipv4.stdout }}{% else %}{{ ipify_public_ip }}{% endif %}"
    common_public_ipv6: "{% if common_cloud != 'unknown-cloud' %}{{ common_public_ipv6.stdout }}{% endif %}"

- name: Show Cloud and Public IP
  ansible.builtin.debug:
    msg: |
      Cloud:       {{ common_cloud }}
      Public IPv4: {{ common_public_ipv4 }}
      Public IPv6: {{ common_public_ipv6 }}
